<?xml version="1.0" encoding="utf-8"?>
<section xml:id="section-3" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Introduction to Invariant Theory</title>
<p>
    The <url href="https://macaulay2.com/doc/Macaulay2/share/doc/Macaulay2/InvariantRing/html/index.html"><c>InvariantRing</c></url> package, written by <url href="https://msp.org/jsag/2013/5-1/p03.xhtml"> Hawes (2013) </url> and <url href="10.2140/jsag.2024.14.5">Ferraro et.al. (2020)</url>, is designed to compute invariants of linearly reductive actions. Useful references include the textbooks <url href="https://link.springer.com/book/10.1007%252F978-3-662-48422-7"><em>Computational Invariant Theory</em> (2015)</url> by H. Derksen and G. Kemper and <url href="https://www.math.ens.psl.eu/~benoist/refs/Sturmfels.pdf"> <em>Algorithms in Invariant Theory</em> (2008) </url> by B. Sturmfels. 
</p>
  <p>
    First, we need to ensure the <c>InvariantRing</c> package is loaded.
</p>
<sage language="macaulay2">
  <input>
needsPackage "InvariantRing"
  </input>
  <output>...</output>
</sage>

<subsection xml:id="subsec-6">
    <title>What is Invariant Theory?</title>
    <p>
        Let a group <m>G</m> act linearly on a vector space <m>V</m> over a field <m>K</m>. This action extends to the polynomial ring <m>R = K[V] = K[x_1, \dots, x_n]</m> by <m>(g \cdot f)(x) = f(g^{-1} \cdot x)</m> for <m>g \in G, f \in R</m>. A polynomial <m>f</m> is an <em>invariant</em> if <m>g \cdot f = f</m> for all <m>g \in G</m>. The set of all such invariant polynomials forms a subring <m>R^G \subseteq R</m>, called the <em>ring of invariants</em>. 
    </p>
    <p>
        A very first example is the invariants of the symmetric group known to Newton. Let's generate the group <m>\mathcal S_4</m> using the permutations <m>2134</m> and <m>2341</m>. This is the well-celebrated fact that <m>\mathcal S_n</m> can be minimally generated by a simple transposition and an <m>n</m>-cycle.
    </p>
    <sage language="macaulay2">
        <input> R = QQ[x_1..x_4]
            L = apply({"2134","2341"},permutationMatrix)
        </input>
        <output>...</output>
      </sage>
      <sage language="macaulay2">
        <input> S4 = finiteAction(L, R)
            netList invariants S4
        </input>
        <output>...</output>
      </sage>
<p>
    These are our old friends, symmetric polynomials. How about the alternating group <m>\mathcal A_4</m>? 
</p>
<sage language="macaulay2">
    <input> L' = apply({"2314","2143"},permutationMatrix);
        A4 = finiteAction(L', R)
        netList invariants A4
    </input>
    <output>...</output>
  </sage>
<p>
    Indeed, the <m>\mathcal A_n</m> invariants are generated by the elementary symmetrics <em>and the Vandemonde determinant.</em>
</p>
<p>
    A set of homogeneous invariants <m>f_1, \dots, f_n \in K[V]^G</m> (where <m>n = \dim(V)</m>) forms a <em>homogeneous system of parameters</em> if they are algebraically independent and the invariant ring <m>K[V]^G</m> is a finitely generated module over the polynomial subalgebra <me>A := K[f_1, \dots, f_n].</me> These <m>f_i</m> are then called <em>primary invariants</em>. Since <m>K[V]^G</m> is Cohen-Macaulay when <m>G</m> is linearly reductive (Theorem 2.6.5), it is actually a <em>free</em> module over <m>A</m> (Proposition 2.6.3). This means <me>K[V]^G = \bigoplus_{j=1}^s A \cdot g_j</me> for some homogeneous invariants <m>g_1, \dots, g_s \in K[V]^G</m>. These <m>g_j</m> (including <m>g_1=1</m>) are called <em>secondary invariants</em>. Together, the primary and secondary invariants generate <m>K[V]^G</m> as a <m>K</m>-algebra. Let's try this for <m>\mathcal A_4</m>. 
    </p>


  <sage language="macaulay2">
    <input> primaryInvariants S4
        secondaryInvariants S4
    </input>
    <output>...</output>
  </sage>
    
    
</subsection>

<subsection xml:id="subsec-7">
    <title>Diagonal Actions and Quotient Singularities</title>
    <p>
        Now, let's do some geometry. Consider the cyclic group <m>C_2</m> acting on the affine plane <m>\mathbb A^2</m> by <m>-1\cdot(x,y) = (-x,-y)</m>. We want to understand the quotient <m>\mathbb A^2 / C_2</m>. Taking quotients contravariantly corresponds to taking the ring of invariants <m>k[x,y]^{C_2}</m>.
    </p>
    <sage language="macaulay2">
        <input> R = QQ[x,y];
            d1 = {2};
            W1 = matrix{{1,1}};
            A1 = diagonalAction(W1, d1, R);
            invariants A1
        </input>
        <output>...</output>
      </sage>
      <p>
        ... so <m>k[x,y]^{C_2} = k[x^2, xy, y^2] \cong \frac{k[X,Y,Z]}{Z^2 - XY}</m> is the coordinate ring for the quadric cone!
      </p>
      <figure>
        <caption></caption>
        <image source="quadric cone.png" width="60%">
        </image>
      </figure>
      <p>
       Next, consider the cyclic group <m>C_3</m> acting on the affine plane <m>\mathbb A^2</m> by <m>-1\cdot(x,y) = (\zeta_3 x,\zeta_3^2 y)</m>, where <m>\zeta_3</m> is a 3rd root of unity. 
    </p>
    <sage language="macaulay2">
        <input>
            d2 = {3};
            W2 = matrix{{1,-1}};
            A2 = diagonalAction(W2, d2, R);
            invariants A2
        </input>
        <output>...</output>
      </sage>
      <p>
        ... so <m>k[x,y]^{C_3} = k[x^3, xy, y^3] \cong \frac{k[X,Y,Z]}{Z^3 - XY}</m> is a rational double point of type <m>A_2</m>. TODO: Calculate the invariants for ADE singularities. 
      </p>
      <figure>
        <caption></caption>
        <image source="A2 double point.png" width="60%">
        </image>
      </figure>
<p>
    Both of the above actions live inside the action of <m>\mathbb G_m</m> on <m>\mathbb A^2</m> of bidegree <m>(1,-1)</m>. What are its invariants?
</p>
<sage language="macaulay2">
    <input>
        W3 = matrix{{1,-1}};
        A3 = diagonalAction(W3, R);
        invariants A
    </input>
    <output>...</output>
  </sage>
  <p>
    We see that <m>xy</m> is the only global invariant function of this action. The <em>GIT quotient</em> is therefore <m>\operatorname{Spec} k[xy]</m> which is the affine line. This can be seen from the following doodle of the orbits:
  </p>
  <figure>
    <caption></caption>
    <image source="A2 mod Gm.png" width="80%">
    </image>
  </figure>
  <p>
    There are 3 kinds of orbits: the hyperbola <m>\{xy = a \mid a \neq 0\}</m>, the axes, and the origin. The hyperbola form an <m>\mathbb A^1 - 0</m>-worth of closed orbits. The axes are the non-closed orbits, and the origin is the 'stacky point'. The GIT quotient crashes the latter 3 into one single point. 
  </p>

</subsection>

<subsection xml:id="subsec-8">
    <title>Linearly Reductive Groups and Hilbert's Finiteness Theorem</title>
    <p>
        Recall that a rational representation of a linear algebraic group <m>G</m> is a representation <m>V</m> such that the <m>G</m> action is regular when <m>V</m> is viewed as an affine space. A linear algebraic group <m>G</m> is <em>linearly reductive</em> if for every rational representation <m>V</m> and every <m>v \in V^G - 0</m>, there exists a linear invariant function <m>f \in\left(V^*\right)^G</m> such that <m>f(v) \neq 0</m>.
    </p>
    <example xml:id="ex-Ga-action-K2">
        <title>(2.2.18) Non-reductive action.</title>
        <p>
            Let <m>\mathbb{G}_a=K</m> be the additive group. We define a regular action on <m>K^2</m> by
            <me>
                \sigma \cdot(x, y)=(x+\sigma y, y), \quad \sigma \in \mathbb{G}_a,(x, y) \in K^2 .
            </me>
        </p>
        <p>
            The invariant ring <m>K[x, y]^{\mathbb{G}_a}</m> is equal to <m>K[y]</m>. If <m>v \in K \times\{0\}=\left(K^2\right)^{\mathbb{G}_a}</m>, then every invariant vanishes on <m>v</m>. The group <m>\mathbb{G}_a</m> is therefore not geometrically reductive.
        </p>
    </example>

    <theorem xml:id="thm-hilbert">
        <title>Hilbert's Finiteness Theorem <url href="https://gdz.sub.uni-goettingen.de/id/PPN235181684_0036"> Hilbert 1890</url></title>
        <statement>
            <p>
                If <m>G</m> is a linearly reductive group and <m>V</m> is a rational representation,
then <m>k[V]^G</m> is a finitely generated <m>k</m>-algebra.
            </p>
        </statement>
    </theorem>
    <p>
        <url href="https://drive.google.com/file/d/1Nq3uqWiPrFXceXvpg2I22HRoj-y3LfdE/view?usp=sharing">Original paper. See Theorem V (p.531)</url>
    </p>
    <sage language="macaulay2">
        <input> restart
            needsPackage "InvariantRing";
            R = ZZ/3[x_0..x_6];
            P = permutationMatrix toString 2345671
            C7 = finiteAction(P, R);
            reynoldsOperator(x_0*x_1*x_2^2, C7)
        </input>
        <output>...</output>
      </sage>
      <sage language="macaulay2">
        <input> restart
            needsPackage "InvariantRing";
            R = QQ[x_1..x_4];
            W = matrix{{0,1,-1,1}, {1,0,-1,-1}};
            T = diagonalAction(W, R)
            reynoldsOperator(x_1*x_2*x_3 + x_1*x_2*x_4, T)
        </input>
        <output>...</output>
      </sage>
</subsection>
<subsection xml:id="subsec-9">
    <title>The Reynolds Operator and a Proof of Hilbert's Theorem</title>

    <subsubsection xml:id="ssubsec-reynolds-operator-def">
        <title>The Reynolds Operator</title>
        <p>
            For a linearly reductive group <m>G</m> acting on an affine <m>G</m>-variety <m>X</m>, the <em>Reynolds operator</em> <m>\mathcal{R}: K[X] \to K[X]^G</m> is a <m>K[X]^G</m>-module homomorphism that is also a projection onto the invariant ring. This means it satisfies:
            <ul>
                <li>
                    <m>\mathcal{R}(f) = f</m> for all <m>f \in K[X]^G</m> (Projection property).
                </li>
                <li>
                    <m>\mathcal{R}(\sigma \cdot f) = \mathcal{R}(f)</m> for all <m>f \in K[X]</m> and <m>\sigma \in G</m> (G-invariance).
                </li>
                <li>
                    <m>\mathcal{R}(fh) = f \mathcal{R}(h)</m> for all <m>f \in K[X]^G</m> and <m>h \in K[X]</m> (Module homomorphism property).
                </li>
            </ul>
            For a finite group <m>G</m> where <m>|G|</m> is invertible in <m>K</m>, the Reynolds operator is simply averaging over the group: <m>\mathcal{R}(f) = \frac{1}{|G|} \sum_{\sigma \in G} \sigma \cdot f</m>. For other linearly reductive groups (like <m>GL_n(K)</m> or <m>SL_n(K)</m> in characteristic 0), averaging with the Haar measure provides a good heuristic. Reynolds operators for infinite groups are usually defined via <em>Casimir operators</em>; for <em>GL_n, SL_n</em> in particular, one may use <em>Cayley's Omega Process</em> (cf. Chapter 4 of DK15). 
        </p>
    </subsubsection>
  
    <subsubsection xml:id="ssubsec-hilbert-finiteness-proof">
        <title>Hilbert's Proof of Finiteness (Theorem 2.2.10)</title>
            <em>Proof Sketch:</em>
            <ol>
                <li>
                    <p>
                        Let <m>K[V]^G_+</m> be the set of all homogeneous invariants of positive degree. Consider the ideal <m>I := K[V]^G_+ \cdot K[V]</m> in the polynomial ring <m>K[V]</m>. This ideal is generated by all homogeneous invariants of positive degree.
                    </p>
                </li>
                <li>
                    <p>
                        By Hilbert's Basis Theorem, the polynomial ring <m>K[V]</m> is Noetherian. Therefore, the ideal <m>I</m> is finitely generated. We can choose a finite set of homogeneous G-invariants <m>f_1, \dots, f_r \in K[V]^G_+</m> such that <m>I = (f_1, \dots, f_r)K[V]</m>. (The text notes this choice is justified by Proposition 4.1.1, but Hilbert's original argument relies on <m>I</m> being finitely generated by some polynomials <m>h_i \in K[V]</m>, then <m>\mathcal{R}(h_i)</m> yield invariant generators for <m>I</m> as an ideal in <m>K[V]</m> generated by invariants).
                    </p>
                </li>
                <li>
                    <p>
                        We claim that these invariants <m>f_1, \dots, f_r</m> actually generate the entire invariant ring <m>K[V]^G</m> as a <m>K</m>-algebra. We prove this by induction on the degree <m>d</m> of a homogeneous invariant <m>h \in K[V]^G</m>.
                    </p>
                    <ul>
                        <li>
                            <em>Base case:</em> If <m>d=0</m>, then <m>h \in K</m>, which is certainly generated by <m>f_1, \dots, f_r</m> (or by 1 if one includes constant invariants).
                        </li>
                        <li>
                            <em>Inductive step:</em> Assume all homogeneous invariants of degree less than <m>d</m> are in <m>K[f_1, \dots, f_r]</m>. Let <m>h \in K[V]^G</m> be homogeneous of degree <m>d &gt; 0</m>. Since <m>h \in I</m>, we can write <m>h = \sum_{i=1}^r a_i f_i</m> for some <m>a_i \in K[V]</m>. We can choose these <m>a_i</m> to be homogeneous such that <m>\deg(a_i) = d - \deg(f_i)</m>. Since <m>\deg(f_i) &gt; 0</m>, we have <m>\deg(a_i) &lt; d</m>.
                        </li>
                        <li>
                            <p>
                                Apply the Reynolds operator <m>\mathcal{R}</m> to the equation <m>h = \sum a_i f_i</m>. Since <m>h</m> is invariant, <m>\mathcal{R}(h) = h</m>. Since each <m>f_i</m> is invariant and <m>\mathcal{R}</m> is a <m>K[V]^G</m>-module homomorphism (Corollary 2.2.7b), we get:
                                <me>h = \mathcal{R}\left(\sum_{i=1}^r a_i f_i\right) = \sum_{i=1}^r \mathcal{R}(a_i) f_i.</me>
                            </p>
                        </li>
                        <li>
                            <p>
                                Each <m>\mathcal{R}(a_i)</m> is a homogeneous G-invariant. Its degree is <m>\deg(a_i) = d - \deg(f_i) &lt; d</m>. By the induction hypothesis, each <m>\mathcal{R}(a_i)</m> belongs to <m>K[f_1, \dots, f_r]</m>. Therefore, <m>h = \sum \mathcal{R}(a_i) f_i</m> also belongs to <m>K[f_1, \dots, f_r]</m>.
                            </p>
                        </li>
                    </ul>
                </li>
                <li>
                    <p>
                        By induction, all homogeneous invariants are in <m>K[f_1, \dots, f_r]</m>. Since <m>K[V]^G</m> is a graded ring generated by its homogeneous elements, it follows that <m>K[V]^G = K[f_1, \dots, f_r]</m>, and thus <m>K[V]^G</m> is finitely generated.
                    </p>
                </li>
            </ol>
        <p>
            Existence of the Reynolds operator and the Noetherian property are key in this proof. The ideal of invariants <m>I = K[V]^G_+ K[V]</m> is often called the <em>Hilbert ideal</em>.
        </p>
    </subsubsection>
</subsection>

<subsection xml:id="subsec-10">
    <title><m>SL_n</m>-Invariants</title>
    <p>
        In this final section, let's try to calculate some <m>SL_n</m>-invariants. Take the standard representation of <m>SL_2</m> on a <m>2</m>-dimensional vector space <m>V</m>. Suppose the dual <m>V^\vee</m> has basis <m>x,y</m>. The symmetric power <m>\operatorname{Sym}^2 V^\vee</m> is another <m>SL_2</m>-representation, where elements are <em>binary quadratic forms</em>, where a generic element looks like <m>Ax^2 + Bxy + Cy^2</m>. Induced by <em>\begin{pmatrix}a &amp; b \\ c &amp; d \end{pmatrix}\cdot (x,y) = (ax + by, cx+ dy),</em> <m>SL_2</m> acts quadratically on the 3 coeffiecients.
    </p>

    <p>
        To start off, let's define the coordinate ring of <m>SL_2</m>. 
    </p>
    <sage language="macaulay2">
        <input> restart
            needsPackage "InvariantRing"
             S = QQ[a,b,c,d];
            I = ideal(a*d - b*c - 1)
        </input>
        <output>...</output>
      </sage>
      <p>
        Next, here's a neat way to extract the action on binary forms.
      </p>
      <sage language="macaulay2">
        <input> A = S[x,y];
            M = transpose (map(S,A)) last coefficients sub(basis(2,A),{x=&gt;a*x+b*y,y=&gt;c*x+d*y})
        </input>
        <output>...</output>
      </sage>
      <p>
        The defining ideal of the group, the action matrix, plus another ring for the 3 coefficients of a binary form is enough to define the action. 
      </p>
      <sage language="macaulay2">
        <input> R = QQ[z_1..z_3]
            V = linearlyReductiveAction(I,M,R)
        </input>
        <output>...</output>
      </sage>
      <p>
        What are its invariants?
      </p>
      <sage language="macaulay2">
        <input> invariants V
        </input>
        <output>...</output>
      </sage>
      <p>
        ... the discriminant of a quadratic equation!
      </p>
      <p>
        We can run the same Spiel for binary cubic forms. This time, the generic form <m>Ax^3 + Bx^2y + Cxy^2 + Dy^3</m> has 4 coefficients. 
      </p>
      <sage language="macaulay2">
        <input> M' = transpose (map(S,A)) last coefficients sub(basis(3,A),{x=&gt;a*x+b*y,y=&gt;c*x+d*y});
            R' = QQ[w_1..w_4];
            V' = linearlyReductiveAction(I,M',R');
            invariants V'
        </input>
        <output>...</output>
      </sage>
      <p>
        This is the degree 4 discriminant for cubic equations.
      </p>
      <p>
        How about ternary cubic forms <m>A_0x^3 + A_1 y^3 + A_2z^3 + \cdots + A_9 xyz</m>? Recall that these correspond to <em>plane cubic curves</em>. We could do the same as above, but the program won't terminate in a reasonable amount of time. We could instead use a resultant (cf. DK15 Section 2.1).
      </p>
      <sage language="macaulay2">
        <input> restart
            needsPackage "Resultants";
            R = QQ[a300, a210, a201, a120, a111, a102, a030, a021, a012, a003][t1, t2, t3];
            f = a300*t1^3 + a210*t1^2*t2 + a201*t1^2*t3 + a120*t1*t2^2 + a111*t1*t2*t3 + a102*t1*t3^2 + a030*t2^3 + a021*t2^2*t3 + a012*t2*t3^2 + a003*t3^3;
            ft1 = diff(t1, f);
            ft2 = diff(t2, f);
            ft3 = diff(t3, f);
            F = {ft1, ft2, ft3};
            time Delta = resultant F
        </input>
        <output>...</output>
      </sage>
      <sage language="macaulay2">
        <input> Delta
        </input>
        <output>...</output>
      </sage>
      <sage language="macaulay2">
        <input> degree Delta
            print(isPrime Delta)
            print(# terms Delta)
        </input>
        <output>...</output>
      </sage>
      <p>
        This is the famous <em>discriminant of an elliptic curve</em>! It is an irreducible polynomial of degree <m>12</m> in <m>10</m> variables, with <m>2040</m> terms. It is closely related to the Eisenstein series <m>E_4, E_6</m>. Geometrically, this means that the locus of singular plane cubics in the parameter space <m>\mathbb P^9</m> is a degree <m>12</m> hypersurface. 
      </p>
</subsection>

<subsection xml:id="subsec-invring-lr-algo-m2">
  <title>Some notes on the algorithms</title>
  <p>
      The algorithm currently implemented for computing linearly reductive invariants leverages elimination theory and the properties of the Hilbert ideal.
  </p>
  <p>
      The core idea of the algorithm (Algorithm 4.1.9 in Derksen &amp; Kemper, "Computational Invariant Theory") can be summarized in the following high-level steps:
      <ol>
          <li>
              <p>
                  <em>Represent the Group and Action:</em> The group <m>G</m> is described as an affine variety (e.g., by equations in <m>K[z_1, \dots, z_l]</m>), and the representation <m>G \to GL(V)</m> is given by a matrix <m>A_{\text{action}}(z)</m> whose entries are polynomials in the <m>z_i</m>.
              </p>
          </li>
          <li>
              <p>
                  <em>Construct the Graph Ideal (<m>\mathfrak{b}</m>):</em> An ideal <m>I_{\Gamma}</m> is formed in a larger polynomial ring <m>K[x_1,\dots,x_n, y_1,\dots,y_n, z_1,\dots,z_l]</m>. This ideal defines the graph of the action, encoding pairs <m>(v, \sigma \cdot v)</m> for <m>v \in V, \sigma \in G</m>. Specifically, it's generated by:
                  <ul>
                      <li>The defining equations of <m>G</m> (in variables <m>z_j</m>).</li>
                      <li>The equations <m>y_i - \sum_k (A_{\text{action}}(z))_{ik} x_k = 0</m> for <m>i=1,\dots,n</m>, which relate the coordinates <m>y</m> of <m>\sigma \cdot x</m> to the coordinates <m>x</m> of <m>v</m> and group parameters <m>z</m>.
                      </li>
                  </ul>
              </p>
          </li>
          <li>
              <p>
                  <em>Eliminate Group Variables:</em> A Gröbner basis <m>\mathcal{G}</m> of <m>I_{\Gamma}</m> is computed with respect to a monomial order that eliminates the group variables <m>z_j</m>. The elements of <m>\mathcal{G}</m> that lie in <m>K[x,y]</m> form a Gröbner basis for the ideal <m>\mathfrak{b} = I_{\Gamma} \cap K[x,y]</m>. This ideal <m>\mathfrak{b}</m> is the vanishing ideal of the closure of the set <m>\{(v, \sigma \cdot v) | v \in V, \sigma \in G\}</m>.
              </p>
          </li>
          <li>
              <p>
                  <em>Compute Generators for the Hilbert Ideal:</em> If <m>\{f_j(x,y)\}</m> are homogeneous generators of <m>\mathfrak{b}</m>, then the polynomials <m>\{f_j(x,0)\}</m> generate the <em>Hilbert ideal</em> <m>I_H = K[V]^G_+ K[V]</m> in <m>K[x] = K[V]</m>.
              </p>
          </li>
          <li>
              <p>
                  <em>Working around the Reynolds operator:</em> By Proposition 4.1.1 in Derksen &amp; Kemper, if <m>I_H = (h_1(x), \dots, h_s(x))</m> where <m>h_k</m> are homogeneous (not necessarily invariant), then <m>K[V]^G = K[\mathcal{R}(h_1), \dots, \mathcal{R}(h_s)]</m>, where <m>\mathcal{R}</m> is the Reynolds operator. The <c>invariants(LinearlyReductiveAction)</c> method computes the Hilbert ideal first using <c>hilbertIdeal</c> then finds invariant generators degree by degree.
              </p>
          </li>
      </ol>
  </p>
  <p>
      There is ongoing work to implement more direct and potentially efficient methods for constructing the Reynolds operator itself. Two classical approaches being explored are:
      <ul>
          <li>
              <p>
                  <em>Via the Casimir Operator:</em> For a connected semi-simple Lie group <m>G</m>, the <em>Casimir operator</em> is a specific element in the center of the universal enveloping algebra of its Lie algebra <m>\mathfrak{g}</m>. It commutes with the action of <m>G</m> on any representation and acts as a scalar on irreducible representations. The Reynolds operator can be constructed using the Casimir operator (see Algorithm 4.5.19/4.5.20 in Derksen &amp; Kemper).
              </p>
          </li>
          <li>
              <p>
                  <em>Via Cayley's Omega Process:</em> For <m>GL_n(K)</m> and <m>SL_n(K)</m>, Cayley's <m>\Omega</m>-process produces invariants via explicit differential operators -- the <m>\Omega</m>-operator <m>\det(\frac{\partial}{\partial z_{ij}})</m>, where <m>z_{ij}</m> are matrix entries. The Reynolds operator can be expressed in terms of iterates of the <m>\Omega</m>-operator and powers of its determinant (Propositions 4.5.27 and 4.5.28 in Derksen &amp; Kemper).
              </p>
          </li>
      </ul>
  </p>
  <p>
    That it! Hope you had a lot of fun! --Michael R. Zeng
  </p>
</subsection>










</section>